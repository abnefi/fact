<?php

namespace StockBundle\Repository;

use UserBundle\Entity\FosUser;

/**
 * StockProduitRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StockProduitRepository extends \Doctrine\ORM\EntityRepository
{

    public function listProduit($societe) {
        $articles = $this->_em->createQuery(
            "select p.designation, 'article' type, p.id, '' uniteMesure, p.prixUnitaireVente, g.code taxeGroupe
            from StockBundle:StockProduit p
            inner join ConfigBundle:ConfigSociete s WITH s = p.societe
            inner join ConfigBundle:ConfigTaxeGroupe g WITH g = p.taxeGroupe
            inner join StockBundle:StockArticle a with a = p
            where p.estSupprimer = 0
            and s = :societe"
        )->setParameter('societe', $societe)
            ->getResult();

        $services = $this->_em->createQuery(
            "select p.designation, 'service' type, p.id, c.id uniteMesure, p.prixUnitaireVente
            from StockBundle:StockProduit p
            inner join ConfigBundle:ConfigSociete s WITH s = p.societe
            inner join StockBundle:StockService a with a = p
            inner join ConfigBundle:ConfigUniteMesure c with c = a.uniteMesure
            where p.estSupprimer = 0
            and s = :societe"
        )->setParameter('societe', $societe)
            ->getResult();
        return array_merge($articles, $services);
    }


    public function listeProduitSoc($userID = null )
    {
        $societe = $this->_em->getRepository(FosUser::class)->find($userID)->getAgence()->getSociete();

        return $this
            ->createQueryBuilder('a')
            ->where('a.societe = :societe')
            ->setParameter('societe', $societe);
    }
}
