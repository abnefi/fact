<table class="table table-bordered dataTable">
    <thead>
    <tr>
        <th>N°</th>
        <th>Référence</th>
        <th>Date Facture</th>
        <th>Date Règlement</th>
        <th>Client</th>
        <th>Est validé ?</th>
        <th>Est payé ?</th>
        <th>Déclaration</th>

        <th>Actions</th>
    </tr>
    </thead>
    <tbody>
    {% for clientFacture in clientFactures %}
        <tr>
            <td><a href="{% if clientFacture.typeFacture.avoir == false %}
                            {{ path('clientfacturevente_show', { 'id': clientFacture.id }) }}
                             {% else %} {{ path('clientfactureavoir_show', { 'id': clientFacture.id }) }}{% endif %}">{{ loop.index }}</a>
            </td>
            <td>{{ clientFacture.reference }}</td>
            <td>{% if clientFacture.dateFacture %}{{ clientFacture.dateFacture|date('d/m/Y') }}{% endif %}</td>
            <td>{% if clientFacture.dateReglement %}{{ clientFacture.dateReglement|date('d/m/Y') }}{% endif %}</td>
            <td>{{ clientFacture.client.nom }}</td>
            <td>{% if clientFacture.estValide %}Oui{% else %}Non{% endif %}</td>
            <td>{% if clientFacture.estPayee %}Oui{% else %}Non{% endif %}</td>
            <td>
                {% if clientFacture.etatDeclaration is not null %}
                    {{ clientFacture.etatDeclaration.libelle }}
                {% else %}
                    Non effectué
                {% endif %}
            </td>
            <td>
                <div class="btn-group">
                    <a class="btn btn-primary" data-toggle="tooltip"
                       data-placement="top" title="Voir"
                       href="{% if clientFacture.typeFacture.avoir == false %}
                                 {{ path('clientfacturevente_show', { 'id': clientFacture.id }) }}
                                  {% else %} {{ path('clientfactureavoir_show', { 'id': clientFacture.id }) }}{% endif %}">
                        <span class="oi oi-eye"></span>
                    </a>
                    {% if clientFacture.estValide == false %}
                        <a class="btn btn-primary" data-toggle="tooltip" data-placement="top"
                           title="Modifier"
                           href="{% if clientFacture.typeFacture.avoir == false %}
                                 {{ path('clientfacturevente_edit', { 'id': clientFacture.id }) }}
                                  {% else %} {{ path('clientfactureavoir_edit', { 'id': clientFacture.id }) }}{% endif %}">
                            <span class="oi oi-pencil"></span>
                        </a>
                    {% endif %}
                </div>
                {#<div class="dropdown">#}
                {#<button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">#}
                {#Actions#}
                {#</button>#}
                {#<div class="dropdown-menu">#}
                {#<a class="dropdown-item"#}
                {#href="{{ path('clientfacture_show', { 'id': clientFacture.id }) }}">#}
                {#<span class="oi oi-eye"> Voir</span>#}
                {#</a>#}
                {#<a class="dropdown-item"#}
                {#href="{{ path('clientfacture_edit', { 'id': clientFacture.id }) }}">#}
                {#<span class="oi oi-pencil"> Modifier</span>#}
                {#</a>#}
                {#</div>#}
                {#</div>#}
            </td>
        </tr>
    {% endfor %}
    </tbody>
</table>

<script>
    function generateTableTitle() {
        var titre = 'Liste des factures';
        var selectTypesFacture = $('#type_facture').val();
        var selectClients = $('#select_clients').val();
        var tempsFacturationActif = $("#check_temps_facture").prop('checked');
        var typeTemps = $("input[name='type_temps_facture']:checked").val();
        var tempsFacturation = $('#temps_facture').val(); //valeur de la date ou de la période de facturation

        if (tempsFacturationActif == true) {
            switch (typeTemps) {
                case "date":
                    var dateEtat = new Date(tempsFacturation);
                    var dateEtatFormate = formaterDate(dateEtat);
                    titre += " du " + dateEtatFormate;
                    break;
                case "periode":
                    var tableauPeriodeEtat = tempsFacturation.split(' au ');
                    if (tableauPeriodeEtat.length === 2) {
                        var debut = new Date(tableauPeriodeEtat[0]);
                        var fin = new Date(tableauPeriodeEtat[1]);
                        // console.log(formaterDate(debut), formaterDate(fin));
                        titre += " entre le " + formaterDate(debut) + " et le " + formaterDate(fin);
                    }
                    break;
            }
        }
        if (selectTypesFacture != null) {
            if (selectTypesFacture.length > 0) {
                var text = $('#type_facture option:selected').toArray().map(item => item.text).join();
                titre += " ( " + text + ") ";
            }
        }
        if (selectClients != null) {
            if (selectClients.length > 0) {
                var text = $('#select_clients option:selected').toArray().map(item => item.text).join();
                if (selectClients.length == 1) {
                    titre += " pour le client " + text;
                }
                else {
                    titre += " pour les clients: " + text;

                }
            }
        }
        // if (selectAgence.val() != '0') {
        //     titre += " de l'" + $("#agence_employe_id option:selected").html();
        // }
        // if (selectFonction.val() != '0') {
        //     titre += ' ayant la fonction ' + $("#fonction_employe_id option:selected").html();
        // }
        {#titre += ' de {{ app.session.get('libelle_societe')|upper }}';#}
        return titre;

    }
</script>
<script type="text/javascript">
    $(document).ready(function () {
        var table = $('.dataTable').DataTable({
            lengthChange: true,
            dom: 'Bfrtip',
            ordering: false,
            columnDefs: [
                {type: 'date-uk', targets: 7}
            ],
            // "order": [[7, "asc"]],
            buttons: [{
                extend: 'print',
                text: 'Imprimer',
                title: generateTableTitle(),
                autoPrint: true,
                orientation: 'landscape',
                exportOptions: {
                    columns: ':visible',
                },

                customize: function (win) {
                    $(win.document.body).find('table').addClass('display').css('font-size', '9px');
                    $(win.document.body).find('tr:nth-child(odd) td').each(function (index) {
                        $(this).css('background-color', '#D0D0D0');
                    });
                    $(win.document.body).find('h1').css('text-align', 'center');
                }
            },
                {
                    // extend: 'excel',
                    extend: 'excelHtml5',
                    title: generateTableTitle(),
                    exportOptions: {
                        columns: ':visible',
                        //                        columns: [ 0, 1, 2, 3 ]
                    },
                    // customize: function ( xlsx ){
                    //     var sheet = xlsx.xl.worksheets['sheet1.xml'];
                    //     // jQuery selector to add a border
                    //     $('row c[r*="10"]', sheet).attr( 's', '25' );
                    // }
                },
                {
                    extend: 'pdf',
                    title: generateTableTitle(),
                    exportOptions: {
                        columns: ':visible',
                        //                        columns: [ 0, 1, 2, 3 ]
                    }
                },
                'colvis'],
            language: {
                buttons: {
                    print: 'Imprimer',
                    pdf: 'PDF',
                    excel: 'Excel',
                    colvis: 'Masquer'
                },
                search: 'Chercher',
            }
        });

        table.buttons().container()
            .appendTo($('#print'));
        table.columns('.masked').visible(false);
    });
</script>